# Generated by Django 4.2 on 2023-05-08 11:11

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_title', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=600)),
                ('course_cover_image', models.ImageField(default='default.jpg', upload_to='images/course_cover/')),
                ('length', models.DurationField()),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('price', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'Category_Course_category_id',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_title', models.TextField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=200, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('phone_number', models.CharField(default='+980000000000', max_length=13)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('profile_image', models.ImageField(default='default.jpg', upload_to='images/profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('member_ship', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.membership')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Member',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_at', models.CharField(max_length=20)),
                ('payment_status', models.CharField(choices=[('successful', 'Successful'), ('unsuccessful', 'Unsuccessful'), ('suspended', 'Suspended')], default='unsuccessful', max_length=20)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.course')),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.course')),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(validators=[django.core.validators.MaxValueValidator(220)])),
                ('weight', models.FloatField(validators=[django.core.validators.MaxValueValidator(200)])),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('non', 'Not Preferred')], default='non', max_length=20)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='membership',
            name='member_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CourseVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('length', models.DurationField()),
                ('video_file', models.FileField(default='default.mp4', upload_to='videos/')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.category')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseMemberRelationships',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validate', models.BooleanField(verbose_name='is valid?')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course2member', to='Authentication.course', verbose_name='course')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member2course', to=settings.AUTH_USER_MODEL, verbose_name='member')),
            ],
            options={
                'verbose_name': 'CourseMemberRelationships',
                'unique_together': {('member', 'course')},
            },
        ),
        migrations.CreateModel(
            name='CourseCategoryRelationships',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validate', models.BooleanField(verbose_name='is valid?')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_id', to='Authentication.category', verbose_name='category')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_based_category', to='Authentication.course', verbose_name='course')),
            ],
            options={
                'verbose_name': 'CourseCategoryRelationships',
                'unique_together': {('category', 'course')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='category_id',
            field=models.ManyToManyField(blank=True, related_name='course_based_category', through='Authentication.CourseCategoryRelationships', to='Authentication.category'),
        ),
        migrations.AddField(
            model_name='course',
            name='members_access',
            field=models.ManyToManyField(related_name='purchased_course_id', through='Authentication.CourseMemberRelationships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('address', models.TextField(max_length=300)),
                ('address_phone', models.CharField(default='+982100000000', max_length=13)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
