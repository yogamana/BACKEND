# Generated by Django 4.2 on 2023-05-07 16:54

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("Authentication", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_title", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("course_title", models.CharField(max_length=200)),
                ("description", models.TextField(max_length=600)),
                (
                    "course_cover_image",
                    models.ImageField(
                        default="default.jpg", upload_to="images/course_cover/"
                    ),
                ),
                ("length", models.DurationField()),
                (
                    "rating",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ]
                    ),
                ),
                ("price", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "Category_Course_category_id",
            },
        ),
        migrations.AlterModelOptions(
            name="member",
            options={"verbose_name": "Member"},
        ),
        migrations.AlterModelManagers(
            name="member",
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RenameField(
            model_name="member",
            old_name="user_name",
            new_name="username",
        ),
        migrations.RemoveField(
            model_name="membership",
            name="membership_id",
        ),
        migrations.AddField(
            model_name="member",
            name="date_joined",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="date joined"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                verbose_name="active",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="is_staff",
            field=models.BooleanField(
                default=False,
                help_text="Designates whether the user can log into this admin site.",
                verbose_name="staff status",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="is_superuser",
            field=models.BooleanField(
                default=False,
                help_text="Designates that this user has all permissions without explicitly assigning them.",
                verbose_name="superuser status",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="last_login",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="last login"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="member_ship",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="Authentication.membership",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="phone_number",
            field=models.CharField(default="+980000000000", max_length=13),
        ),
        migrations.AddField(
            model_name="member",
            name="profile_image",
            field=models.ImageField(default="default.jpg", upload_to="images/profile/"),
        ),
        migrations.AddField(
            model_name="member",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="created_date",
            field=models.DateField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="member",
            name="email",
            field=models.EmailField(max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name="member",
            name="password",
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name="membership",
            name="member_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Purchase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("place_at", models.CharField(max_length=20)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("successful", "Successful"),
                            ("unsuccessful", "Unsuccessful"),
                            ("suspended", "Suspended"),
                        ],
                        default="unsuccessful",
                        max_length=20,
                    ),
                ),
                (
                    "course_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Authentication.course",
                    ),
                ),
                (
                    "member_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Program",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("date_start", models.DateTimeField()),
                ("date_end", models.DateTimeField()),
                (
                    "course_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Authentication.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PhysicalInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "height",
                    models.FloatField(
                        validators=[django.core.validators.MaxValueValidator(220)]
                    ),
                ),
                (
                    "weight",
                    models.FloatField(
                        validators=[django.core.validators.MaxValueValidator(200)]
                    ),
                ),
                ("birth_date", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("m", "Male"),
                            ("f", "Female"),
                            ("non", "Not Preferred"),
                        ],
                        default="non",
                        max_length=20,
                    ),
                ),
                (
                    "member_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CourseVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("video_title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("length", models.DurationField()),
                (
                    "video_file",
                    models.FileField(default="default.mp4", upload_to="videos/"),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Authentication.category",
                    ),
                ),
                (
                    "course_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Authentication.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CourseMemberRelationships",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("validate", models.BooleanField(verbose_name="is valid?")),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membership_access",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="course",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchased_course_id",
                        to="Authentication.course",
                        verbose_name="member",
                    ),
                ),
            ],
            options={
                "verbose_name": "CourseMemberRelationships",
                "unique_together": {("member", "course")},
            },
        ),
        migrations.CreateModel(
            name="CourseCategoryRelationships",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("validate", models.BooleanField(verbose_name="is valid?")),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_based_category",
                        to="Authentication.course",
                        verbose_name="category",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_id",
                        to="Authentication.category",
                        verbose_name="course",
                    ),
                ),
            ],
            options={
                "verbose_name": "CourseCategoryRelationships",
                "unique_together": {("category", "course")},
            },
        ),
        migrations.AddField(
            model_name="course",
            name="category_id",
            field=models.ManyToManyField(
                blank=True,
                related_name="course_based_category",
                through="Authentication.CourseCategoryRelationships",
                to="Authentication.category",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="members_access",
            field=models.ManyToManyField(
                related_name="purchased_course_id",
                through="Authentication.CourseMemberRelationships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.CharField(max_length=200)),
                ("city", models.CharField(max_length=200)),
                ("address", models.TextField(max_length=300)),
                (
                    "address_phone",
                    models.CharField(default="+982100000000", max_length=13),
                ),
                (
                    "member_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
